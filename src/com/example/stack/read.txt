  避免不必要的对象:
  1:
  /**
   * 避免创建不必要的对象
     比如对于多出引用的对象 可以设置为private static final
   */
  2:
  /**
    * 自动装箱的过程会更多的消耗程序执行的资源的和时间 造成不必要的浪费
    * 优先使用基本类型 避免不必要装箱拆箱过程
  */
  3:
  /**
     * 内存泄漏造成原因:
     * 1,对象自己管理内存 类似于栈这种容器自己管理对象 当对象处于无效状态后 gc并不会检测到对象是无效的对象从而也不会进行回收
     * 2,数据的缓存也可能造成内存泄漏 (集合类型) 当需要缓存数据的时候建议使用weekHashMap 这种弱引用类型
     * 3,监听器 和其他回调也可能导致内存泄漏
     */